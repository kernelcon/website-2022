{"ast":null,"code":"var _jsxFileName = \"/home/app/src/pages/Agenda/TalksSchedule.js\";\nimport React, { Component } from 'react';\nimport './TalksSchedule.scss';\nexport default class TalksSchedule extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleScheduleDate = index => {\n      this.setState({\n        dayIndex: index,\n        showTabNum: index\n      });\n    };\n\n    this.state = {\n      isOpen: false,\n      dayIndex: 0,\n      showTabNum: 0\n    };\n  }\n\n  render() {\n    const scheduleConfig = [{\n      dayOfWeek: 'Friday',\n      date: '1',\n      roomsInfo: [{\n        roomName: 'Room 1'\n      }, {\n        roomName: 'Room 2'\n      }, {\n        roomName: 'Room 3'\n      }],\n      talksGrid: [{\n        time: '0730',\n        roomIndex: [0, 1, 2],\n        talkTitle: 'Registration and Rooms Open',\n        authors: [{\n          name: 'Kernelcon'\n        }]\n      }, {\n        time: '0850',\n        roomIndex: [0, 1, 2],\n        talkTitle: 'Opening Remarks',\n        authors: [{\n          name: 'Kernelcon'\n        }]\n      }, {\n        time: '0900',\n        roomIndex: [0, 1, 2],\n        talkTitle: 'Keynote: Joe Grand',\n        authors: [{\n          name: 'Joe Grand'\n        }]\n      }, {\n        time: '1000',\n        roomIndex: [0, 1, 2],\n        talkTitle: 'Break.  Chris Eagle Book Signing',\n        authors: [{\n          name: 'Chris Eagle'\n        }]\n      }, {\n        time: '1015',\n        roomIndex: [0],\n        talkTitle: 'Breaking into Cloud Wallets: Findings from 3 years spent Hacking Crypto Web Apps',\n        authors: [{\n          name: 'Sam Curry'\n        }]\n      }, {\n        time: '1015',\n        roomIndex: [1, 2],\n        talkTitle: 'Learning to Speak ACARS Using ELK: Using SDR and ELK to Capture and Understand Aviation Data Links',\n        authors: [{\n          name: 'Carl Schuett'\n        }, {\n          name: 'Jesse Young'\n        }]\n      }]\n    }, {\n      dayOfWeek: 'Saturday',\n      date: '2',\n      roomsInfo: [{\n        roomName: 'Room a1'\n      }, {\n        roomName: 'Room 2b'\n      }, {\n        roomName: 'Room 3c'\n      }],\n      talksGrid: [{\n        time: '0730',\n        roomIndex: [0, 1, 2],\n        talkTitle: 'Registration and Rooms Open',\n        authors: [{\n          name: 'Kernelcon'\n        }]\n      }, {\n        time: '0850',\n        roomIndex: [0, 1, 2],\n        talkTitle: 'Opening Remarks',\n        authors: [{\n          name: 'Kernelcon'\n        }]\n      }, {\n        time: '0900',\n        roomIndex: [0, 1, 2],\n        talkTitle: 'Keynote: Jen Easterly',\n        authors: [{\n          name: 'Jen Easterly'\n        }]\n      }, {\n        time: '1000',\n        roomIndex: [0, 1, 2],\n        talkTitle: 'Break. (Room Switch)',\n        authors: [{\n          name: 'Kernelcon'\n        }]\n      }, {\n        time: '1015',\n        roomIndex: [0],\n        talkTitle: 'NetflOSINT: Taking an often-overlooked data source and operationalizing it',\n        authors: [{\n          name: 'Joe Gray'\n        }]\n      }, {\n        time: '1015',\n        roomIndex: [1, 2],\n        talkTitle: 'All Juiced Up',\n        authors: [{\n          name: 'Nate Wood'\n        }]\n      }]\n    }];\n    const dayOfWeek = scheduleConfig[this.state.dayIndex].dayOfWeek;\n    const scheduleTabs = scheduleConfig.map((ele, index) => {\n      return React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"radio\",\n        onChange: () => {\n          this.toggleScheduleDate(index);\n        },\n        name: \"schedule-tabs\",\n        id: \"tab\".concat(index),\n        checked: index === this.state.showTabNum ? true : false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"tab\".concat(index),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, ele.dayOfWeek, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, ele.date)));\n    });\n    const tabsHeader = React.createElement(React.Fragment, null, React.createElement(\"ul\", {\n      className: \"tabs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, scheduleTabs), React.createElement(\"div\", {\n      className: \"schedule-heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"Tentative \".concat(dayOfWeek, \" Speaking Schedule\")), React.createElement(\"div\", {\n      className: \"tz-note\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \"Note: All times listed are in Central Time.\"));\n    const trackHeaders = scheduleConfig[this.state.dayIndex].roomsInfo.map((ele, index) => {\n      return React.createElement(\"div\", {\n        className: \"track\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, ele.roomName);\n    });\n    const talksGrid = scheduleConfig[this.state.dayIndex].talksGrid.map((ele, index) => {\n      return React.createElement(\"a\", {\n        className: \"all-tracks\",\n        onClick: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"talk-time\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, ele.time), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, ele.talkTitle)));\n    });\n    const gridTemplateColumnsPercentage = 100 / scheduleConfig[this.state.dayIndex].roomsInfo.length;\n    const gridTemplateColumnsString = \"calc(\".concat(gridTemplateColumnsPercentage, \"% - 10px) \");\n    const gridTemplateColumns = \"\".concat(gridTemplateColumnsString.repeat(scheduleConfig[this.state.dayIndex].roomsInfo.length), \";\");\n    return React.createElement(\"div\", {\n      className: \"schedule-talks\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, tabsHeader, React.createElement(\"div\", {\n      className: \"grid-wrapper\",\n      style: {\n        gridTemplateColumns: gridTemplateColumns\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, trackHeaders, talksGrid));\n  }\n\n}\nTalksSchedule.displayName = 'TalksSchedule';","map":{"version":3,"sources":["/home/app/src/pages/Agenda/TalksSchedule.js"],"names":["React","Component","TalksSchedule","constructor","props","toggleScheduleDate","index","setState","dayIndex","showTabNum","state","isOpen","render","scheduleConfig","dayOfWeek","date","roomsInfo","roomName","talksGrid","time","roomIndex","talkTitle","authors","name","scheduleTabs","map","ele","tabsHeader","trackHeaders","gridTemplateColumnsPercentage","length","gridTemplateColumnsString","gridTemplateColumns","repeat","displayName"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './TalksSchedule.scss';\n\n\nexport default class TalksSchedule extends Component {\n  static displayName = 'TalksSchedule';\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false,\n      dayIndex: 0,\n      showTabNum: 0,\n    };\n  }\n\n  toggleScheduleDate = (index) => {\n    this.setState({\n      dayIndex: index,\n      showTabNum: index\n    });\n  };\n\n\n  render() {\n\n    const scheduleConfig = [{\n      dayOfWeek: 'Friday',\n      date: '1',\n      roomsInfo: [{\n        roomName: 'Room 1'\n      }, {\n        roomName: 'Room 2'\n      }, {\n        roomName: 'Room 3'\n      }],\n      talksGrid: [{\n        time: '0730',\n        roomIndex: [0, 1, 2],\n        talkTitle: 'Registration and Rooms Open',\n        authors: [{\n          name: 'Kernelcon',\n        }]\n      },{\n        time: '0850',\n        roomIndex: [0, 1, 2],\n        talkTitle: 'Opening Remarks',\n        authors: [{\n          name: 'Kernelcon',\n        }]\n      },{\n        time: '0900',\n        roomIndex: [0, 1, 2],\n        talkTitle: 'Keynote: Joe Grand',\n        authors: [{\n          name: 'Joe Grand',\n        }]\n      },{\n        time: '1000',\n        roomIndex: [0, 1, 2],\n        talkTitle: 'Break.  Chris Eagle Book Signing',\n        authors: [{\n          name: 'Chris Eagle',\n        }]\n      },{\n        time: '1015',\n        roomIndex: [0],\n        talkTitle: 'Breaking into Cloud Wallets: Findings from 3 years spent Hacking Crypto Web Apps',\n        authors: [{\n          name: 'Sam Curry',\n        }]\n      },{\n        time: '1015',\n        roomIndex: [1, 2],\n        talkTitle: 'Learning to Speak ACARS Using ELK: Using SDR and ELK to Capture and Understand Aviation Data Links',\n        authors: [{\n          name: 'Carl Schuett',\n        },\n        {\n          name: 'Jesse Young',\n        }]\n      }]\n    }, {\n      dayOfWeek: 'Saturday',\n      date: '2',\n      roomsInfo: [{\n        roomName: 'Room a1'\n      }, {\n        roomName: 'Room 2b'\n      }, {\n        roomName: 'Room 3c'\n      }],\n      talksGrid: [{\n        time: '0730',\n        roomIndex: [0, 1, 2],\n        talkTitle: 'Registration and Rooms Open',\n        authors: [{\n          name: 'Kernelcon',\n        }]\n      },{\n        time: '0850',\n        roomIndex: [0, 1, 2],\n        talkTitle: 'Opening Remarks',\n        authors: [{\n          name: 'Kernelcon',\n        }]\n      },{\n        time: '0900',\n        roomIndex: [0, 1, 2],\n        talkTitle: 'Keynote: Jen Easterly',\n        authors: [{\n          name: 'Jen Easterly',\n        }]\n      },{\n        time: '1000',\n        roomIndex: [0, 1, 2],\n        talkTitle: 'Break. (Room Switch)',\n        authors: [{\n          name: 'Kernelcon',\n        }]\n      },{\n        time: '1015',\n        roomIndex: [0],\n        talkTitle: 'NetflOSINT: Taking an often-overlooked data source and operationalizing it',\n        authors: [{\n          name: 'Joe Gray',\n        }]\n      },{\n        time: '1015',\n        roomIndex: [1, 2],\n        talkTitle: 'All Juiced Up',\n        authors: [{\n          name: 'Nate Wood',\n        }]\n      }]\n    }];\n\n    const dayOfWeek = scheduleConfig[this.state.dayIndex].dayOfWeek;\n\n    const scheduleTabs = scheduleConfig.map((ele, index) => {\n      return (\n        <li>\n          <input type='radio'\n            onChange={() => {this.toggleScheduleDate(index)}}\n            name='schedule-tabs'\n            id={`tab${index}`}\n            checked={index === this.state.showTabNum ? true : false} />\n            <label htmlFor={`tab${index}`}>{ele.dayOfWeek}<span>{ele.date}</span></label>\n        </li>\n      );\n    });\n\n    const tabsHeader = (\n      <>\n        <ul className='tabs'>\n          {scheduleTabs}\n        </ul>\n        <div className='schedule-heading'>{`Tentative ${dayOfWeek} Speaking Schedule`}</div>\n        <div className='tz-note'>Note: All times listed are in Central Time.</div>\n      </>\n    );\n\n\n    const trackHeaders = scheduleConfig[this.state.dayIndex].roomsInfo.map((ele, index) => {\n      return (\n        <div className='track'>{ele.roomName}</div>\n      );\n    });\n\n\n    const talksGrid = scheduleConfig[this.state.dayIndex].talksGrid.map((ele, index) => {\n\n      return (\n        <a className='all-tracks'\n          onClick=''>\n          <div className='box'>\n            <span className='talk-time'>{ele.time}</span>\n            <span>{ele.talkTitle}</span>\n          </div>\n        </a>\n      );\n\n    });\n\n    const gridTemplateColumnsPercentage = (100 / scheduleConfig[this.state.dayIndex].roomsInfo.length);\n    const gridTemplateColumnsString = `calc(${gridTemplateColumnsPercentage}% - 10px) `;\n    const gridTemplateColumns = `${gridTemplateColumnsString.repeat(scheduleConfig[this.state.dayIndex].roomsInfo.length)};`;\n\n\n    return (\n      <div className='schedule-talks'>\n        {tabsHeader}\n        {/* {gridTemplateColumns} */}\n        <div className={`grid-wrapper`}\n          style={{gridTemplateColumns: gridTemplateColumns}}>\n          {trackHeaders}\n\n          {talksGrid}\n\n        </div>\n      </div>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}