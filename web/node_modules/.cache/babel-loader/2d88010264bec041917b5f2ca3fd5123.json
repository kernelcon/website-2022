{"ast":null,"code":"var _jsxFileName = \"/home/app/src/pages/Agenda/TalksSchedule.js\";\nimport React, { Component } from 'react';\nimport Modal from '../../components/Modal/Modal';\nimport './TalksSchedule.scss';\nexport default class TalksSchedule extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleScheduleDate = index => {\n      this.setState({\n        dayIndex: index,\n        showTabNum: index\n      });\n    };\n\n    this.popModal = title => {\n      this.setState({\n        modal: {\n          title: title\n        }\n      });\n      this.toggleModal();\n    };\n\n    this.toggleModal = () => {\n      this.setState({\n        isOpen: !this.state.isOpen\n      });\n    };\n\n    this.state = {\n      isOpen: false,\n      dayIndex: 0,\n      showTabNum: 0,\n      modal: {\n        title: ''\n      }\n    };\n  }\n\n  render() {\n    const scheduleConfig = [{\n      dayOfWeek: 'Friday',\n      date: '1',\n      roomsInfo: [{\n        roomName: 'Bat of Doom'\n      }, {\n        roomName: 'Terrified Chipmunk'\n      }],\n      talksGrid: [{\n        time: '0730',\n        minutes: '0',\n        roomIndex: [0, 1],\n        talkTitle: 'Registration and Rooms Open',\n        authors: [{\n          name: 'Kernelcon'\n        }]\n      }, {\n        time: '0850',\n        minutes: '10',\n        roomIndex: [0, 1],\n        talkTitle: 'Opening Remarks',\n        authors: [{\n          name: 'Kernelcon'\n        }]\n      }, {\n        time: '0900',\n        minutes: '60',\n        roomIndex: [0, 1],\n        talkTitle: 'Keynote: Joe Grand',\n        authors: [{\n          name: 'Joe Grand'\n        }]\n      }, {\n        time: '1000',\n        minutes: '15',\n        roomIndex: [0, 1],\n        talkTitle: 'Break.  Chris Eagle Book Signing',\n        authors: [{\n          name: 'Chris Eagle'\n        }]\n      }, {\n        time: '1015',\n        minutes: '60',\n        roomIndex: [0],\n        talkTitle: 'Breaking into Cloud Wallets: Findings from 3 years spent Hacking Crypto Web Apps',\n        authors: [{\n          name: 'Sam Curry'\n        }]\n      }, {\n        time: '1015',\n        minutes: '60',\n        roomIndex: [1],\n        talkTitle: 'Learning to Speak ACARS Using ELK: Using SDR and ELK to Capture and Understand Aviation Data Links',\n        authors: [{\n          name: 'Carl Schuett'\n        }, {\n          name: 'Jesse Young'\n        }]\n      }]\n    }, {\n      dayOfWeek: 'Saturday',\n      date: '2',\n      roomsInfo: [{\n        roomName: 'Bat of Doom'\n      }, {\n        roomName: 'Terrified Chipmunk'\n      }],\n      talksGrid: [{\n        time: '0730',\n        minutes: '0',\n        roomIndex: [0, 1],\n        talkTitle: 'Registration and Rooms Open',\n        authors: [{\n          name: 'Kernelcon'\n        }]\n      }, {\n        time: '0850',\n        minutes: '10',\n        roomIndex: [0, 1],\n        talkTitle: 'Opening Remarks',\n        authors: [{\n          name: 'Kernelcon'\n        }]\n      }, {\n        time: '0900',\n        minutes: '60',\n        roomIndex: [0, 1],\n        talkTitle: 'Keynote: Jen Easterly (Fireside Chat + Q&A)',\n        authors: [{\n          name: 'Jen Easterly'\n        }]\n      }, {\n        time: '1000',\n        minutes: '15',\n        roomIndex: [0, 1],\n        talkTitle: 'Break. (Room Switch)',\n        authors: [{\n          name: 'Kernelcon'\n        }]\n      }, {\n        time: '1015',\n        minutes: '60',\n        roomIndex: [0],\n        talkTitle: 'The Hand That Feeds: How to Misuse Kubernetes',\n        authors: [{\n          name: 'Lewis Denham-Parry'\n        }]\n      }, {\n        time: '1015',\n        minutes: '60',\n        roomIndex: [1],\n        talkTitle: 'NetflOSINT: Taking an often-overlooked data source and operationalizing it',\n        authors: [{\n          name: 'Joe Gray'\n        }]\n      }]\n    }];\n    const dayOfWeek = scheduleConfig[this.state.dayIndex].dayOfWeek;\n    const scheduleTabs = scheduleConfig.map((ele, index) => {\n      return React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"radio\",\n        onChange: () => {\n          this.toggleScheduleDate(index);\n        },\n        name: \"schedule-tabs\",\n        id: \"tab\".concat(index),\n        checked: index === this.state.showTabNum ? true : false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"tab\".concat(index),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, ele.dayOfWeek, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, ele.date)));\n    });\n    const tabsHeader = React.createElement(React.Fragment, null, React.createElement(\"ul\", {\n      className: \"tabs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, scheduleTabs), React.createElement(\"div\", {\n      className: \"schedule-heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, \"Tentative \".concat(dayOfWeek, \" Speaking Schedule\")), React.createElement(\"div\", {\n      className: \"tz-note\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, \"Note: All times listed are in Central Time.\"));\n    const trackHeaders = scheduleConfig[this.state.dayIndex].roomsInfo.map((ele, index) => {\n      return React.createElement(\"div\", {\n        className: \"track\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, ele.roomName);\n    });\n    let gridTemplateRows = '42px ';\n    const talksGrid = scheduleConfig[this.state.dayIndex].talksGrid.map((ele, index) => {\n      const gridColumnStart = ele.roomIndex[0] + 1;\n      const gridColumnEnd = ele.roomIndex[ele.roomIndex.length - 1] + 2;\n      const gridColumn = \"\".concat(gridColumnStart, \" / \").concat(gridColumnEnd);\n      const gridRowSize = ele.minutes >= 42 ? '112px' : '42px';\n      gridTemplateRows += \"\".concat(gridRowSize, \" \");\n      return React.createElement(\"a\", {\n        style: {\n          gridColumn: gridColumn\n        },\n        onClick: this.popModal(ele.talkTitle),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"talk-time\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, ele.time), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, ele.talkTitle)));\n    });\n    const gridTemplateColumnsPercentage = (100 / scheduleConfig[this.state.dayIndex].roomsInfo.length).toFixed(1);\n    const gridTemplateColumnsString = \"calc(\".concat(gridTemplateColumnsPercentage, \"% - 10px) \");\n    const gridTemplateColumns = \"\".concat(gridTemplateColumnsString.repeat(scheduleConfig[this.state.dayIndex].roomsInfo.length));\n    gridTemplateRows += \"30px\";\n    return React.createElement(\"div\", {\n      className: \"schedule-talks\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      show: this.state.isOpen,\n      onClose: this.toggleModal,\n      title: this.state.modal.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modal-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, \"Test\")), tabsHeader, React.createElement(\"div\", {\n      className: \"grid-wrapper\",\n      style: {\n        gridTemplateColumns: gridTemplateColumns,\n        gridTemplateRows: gridTemplateRows\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, trackHeaders, talksGrid));\n  }\n\n}\nTalksSchedule.displayName = 'TalksSchedule';","map":{"version":3,"sources":["/home/app/src/pages/Agenda/TalksSchedule.js"],"names":["React","Component","Modal","TalksSchedule","constructor","props","toggleScheduleDate","index","setState","dayIndex","showTabNum","popModal","title","modal","toggleModal","isOpen","state","render","scheduleConfig","dayOfWeek","date","roomsInfo","roomName","talksGrid","time","minutes","roomIndex","talkTitle","authors","name","scheduleTabs","map","ele","tabsHeader","trackHeaders","gridTemplateRows","gridColumnStart","gridColumnEnd","length","gridColumn","gridRowSize","gridTemplateColumnsPercentage","toFixed","gridTemplateColumnsString","gridTemplateColumns","repeat","displayName"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Modal from '../../components/Modal/Modal';\nimport './TalksSchedule.scss';\n\n\nexport default class TalksSchedule extends Component {\n  static displayName = 'TalksSchedule';\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false,\n      dayIndex: 0,\n      showTabNum: 0,\n      modal: {\n        title: '',\n      }\n    };\n  }\n\n  toggleScheduleDate = (index) => {\n    this.setState({\n      dayIndex: index,\n      showTabNum: index\n    });\n  };\n\n  popModal = (title) => {\n    this.setState({\n      modal:{\n        title: title,\n      }\n    });\n    this.toggleModal();\n  }\n\n  toggleModal = () => {\n    this.setState({\n      isOpen: !this.state.isOpen,\n    });\n  }\n\n  render() {\n\n    const scheduleConfig = [{\n      dayOfWeek: 'Friday',\n      date: '1',\n      roomsInfo: [{\n        roomName: 'Bat of Doom'\n      }, {\n        roomName: 'Terrified Chipmunk'\n      }],\n      talksGrid: [{\n        time: '0730',\n        minutes: '0',\n        roomIndex: [0, 1],\n        talkTitle: 'Registration and Rooms Open',\n        authors: [{\n          name: 'Kernelcon',\n        }]\n      },{\n        time: '0850',\n        minutes: '10',\n        roomIndex: [0, 1],\n        talkTitle: 'Opening Remarks',\n        authors: [{\n          name: 'Kernelcon',\n        }]\n      },{\n        time: '0900',\n        minutes: '60',\n        roomIndex: [0, 1],\n        talkTitle: 'Keynote: Joe Grand',\n        authors: [{\n          name: 'Joe Grand',\n        }]\n      },{\n        time: '1000',\n        minutes: '15',\n        roomIndex: [0, 1],\n        talkTitle: 'Break.  Chris Eagle Book Signing',\n        authors: [{\n          name: 'Chris Eagle',\n        }]\n      },{\n        time: '1015',\n        minutes: '60',\n        roomIndex: [0],\n        talkTitle: 'Breaking into Cloud Wallets: Findings from 3 years spent Hacking Crypto Web Apps',\n        authors: [{\n          name: 'Sam Curry',\n        }]\n      },{\n        time: '1015',\n        minutes: '60',\n        roomIndex: [1],\n        talkTitle: 'Learning to Speak ACARS Using ELK: Using SDR and ELK to Capture and Understand Aviation Data Links',\n        authors: [{\n          name: 'Carl Schuett',\n        },\n        {\n          name: 'Jesse Young',\n        }]\n      }]\n    }, {\n      dayOfWeek: 'Saturday',\n      date: '2',\n      roomsInfo: [{\n        roomName: 'Bat of Doom'\n      }, {\n        roomName: 'Terrified Chipmunk'\n      }],\n      talksGrid: [{\n        time: '0730',\n        minutes: '0',\n        roomIndex: [0, 1],\n        talkTitle: 'Registration and Rooms Open',\n        authors: [{\n          name: 'Kernelcon',\n        }]\n      },{\n        time: '0850',\n        minutes: '10',\n        roomIndex: [0, 1],\n        talkTitle: 'Opening Remarks',\n        authors: [{\n          name: 'Kernelcon',\n        }]\n      },{\n        time: '0900',\n        minutes: '60',\n        roomIndex: [0, 1],\n        talkTitle: 'Keynote: Jen Easterly (Fireside Chat + Q&A)',\n        authors: [{\n          name: 'Jen Easterly',\n        }]\n      },{\n        time: '1000',\n        minutes: '15',\n        roomIndex: [0, 1],\n        talkTitle: 'Break. (Room Switch)',\n        authors: [{\n          name: 'Kernelcon',\n        }]\n      },{\n        time: '1015',\n        minutes: '60',\n        roomIndex: [0],\n        talkTitle: 'The Hand That Feeds: How to Misuse Kubernetes',\n        authors: [{\n          name: 'Lewis Denham-Parry',\n        }]\n      },{\n        time: '1015',\n        minutes: '60',\n        roomIndex: [1],\n        talkTitle: 'NetflOSINT: Taking an often-overlooked data source and operationalizing it',\n        authors: [{\n          name: 'Joe Gray',\n        }]\n      }]\n    }];\n\n    const dayOfWeek = scheduleConfig[this.state.dayIndex].dayOfWeek;\n\n    const scheduleTabs = scheduleConfig.map((ele, index) => {\n      return (\n        <li>\n          <input type='radio'\n            onChange={() => {this.toggleScheduleDate(index)}}\n            name='schedule-tabs'\n            id={`tab${index}`}\n            checked={index === this.state.showTabNum ? true : false} />\n            <label htmlFor={`tab${index}`}>{ele.dayOfWeek}<span>{ele.date}</span></label>\n        </li>\n      );\n    });\n\n    const tabsHeader = (\n      <>\n        <ul className='tabs'>\n          {scheduleTabs}\n        </ul>\n        <div className='schedule-heading'>{`Tentative ${dayOfWeek} Speaking Schedule`}</div>\n        <div className='tz-note'>Note: All times listed are in Central Time.</div>\n      </>\n    );\n\n\n    const trackHeaders = scheduleConfig[this.state.dayIndex].roomsInfo.map((ele, index) => {\n      return (\n        <div className='track'>{ele.roomName}</div>\n      );\n    });\n\n    let gridTemplateRows = '42px ';\n\n    const talksGrid = scheduleConfig[this.state.dayIndex].talksGrid.map((ele, index) => {\n      const gridColumnStart = ele.roomIndex[0] + 1;\n      const gridColumnEnd = ele.roomIndex[ele.roomIndex.length - 1] + 2;\n      const gridColumn = `${gridColumnStart} / ${gridColumnEnd}`;\n\n      const gridRowSize = ele.minutes >= 42 ? '112px' : '42px'; \n      gridTemplateRows += `${gridRowSize} `;\n      return (\n        <a style={{gridColumn: gridColumn}}\n          onClick={this.popModal(ele.talkTitle)}>\n          <div className='box'>\n            <span className='talk-time'>{ele.time}</span>\n            <span>{ele.talkTitle}</span>\n          </div>\n        </a>\n      );\n    });\n\n    const gridTemplateColumnsPercentage = (100 / scheduleConfig[this.state.dayIndex].roomsInfo.length).toFixed(1);\n    const gridTemplateColumnsString = `calc(${gridTemplateColumnsPercentage}% - 10px) `;\n    const gridTemplateColumns = `${gridTemplateColumnsString.repeat(scheduleConfig[this.state.dayIndex].roomsInfo.length)}`;\n    gridTemplateRows += `30px`;\n    \n    return (\n      <div className='schedule-talks'>\n\n        <Modal show={this.state.isOpen}\n          onClose={this.toggleModal}\n          title={this.state.modal.title}\n        >\n          <div className='modal-content'>\n          Test\n          </div>         \n        </Modal>\n\n\n\n\n\n\n        {tabsHeader}\n        <div className={`grid-wrapper`}\n          style={{gridTemplateColumns: gridTemplateColumns, \n            gridTemplateRows: gridTemplateRows}}>\n          {trackHeaders}\n\n          {talksGrid}\n\n        </div>\n      </div>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}