{"ast":null,"code":"var _jsxFileName = \"/home/app/src/components/Charts/Donut.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './Donut.scss';\n\nclass Donut extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const halfsize = this.props.size * 0.5;\n    const radius = halfsize - this.props.stroke * 0.5;\n    const circumference = 2 * Math.PI * radius;\n    const strokeval = this.props.value * circumference / 100;\n    const dashval = strokeval + ' ' + circumference;\n    const trackstyle = {\n      strokeWidth: this.props.stroke\n    };\n    const indicatorstyle = {\n      strokeWidth: this.props.stroke,\n      strokeDasharray: dashval\n    };\n    const rotateval = 'rotate(-90 ' + halfsize + ',' + halfsize + ')';\n    return React.createElement(\"svg\", {\n      width: this.props.size,\n      height: this.props.size,\n      className: \"donutchart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"circle\", {\n      r: radius,\n      cx: halfsize,\n      cy: halfsize,\n      transform: rotateval,\n      style: trackstyle,\n      className: \"donutchart-track\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(\"circle\", {\n      r: radius,\n      cx: halfsize,\n      cy: halfsize,\n      transform: rotateval,\n      style: indicatorstyle,\n      className: \"donutchart-indicator\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), this.props.showText && React.createElement(\"text\", {\n      className: \"donutchart-text\",\n      x: halfsize,\n      y: halfsize,\n      style: {\n        textAnchor: 'middle'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"tspan\", {\n      className: \"donutchart-text-val\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, this.props.value), React.createElement(\"tspan\", {\n      className: \"donutchart-text-percent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"%\"), React.createElement(\"tspan\", {\n      className: \"donutchart-text-label\",\n      x: halfsize,\n      y: halfsize + 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, this.props.valuelabel)));\n  }\n\n}\n\nDonut.displayName = 'Donut';\nDonut.propTypes = {\n  value: PropTypes.number,\n  valueLabel: PropTypes.string,\n  size: PropTypes.number,\n  stroke: PropTypes.number,\n  showText: PropTypes.bool,\n  color: PropTypes.string\n};\nDonut.defaultProps = {\n  value: 0,\n  valueLabel: 'Technical',\n  size: 25,\n  stroke: 5,\n  showText: false,\n  color: '#ad974f'\n};\nexport default Donut;","map":{"version":3,"sources":["/home/app/src/components/Charts/Donut.js"],"names":["React","Component","PropTypes","Donut","constructor","props","state","render","halfsize","size","radius","stroke","circumference","Math","PI","strokeval","value","dashval","trackstyle","strokeWidth","indicatorstyle","strokeDasharray","rotateval","showText","textAnchor","valuelabel","displayName","propTypes","number","valueLabel","string","bool","color","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './Donut.scss';\n\nclass Donut extends Component {\n  static displayName = 'Donut';\n\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  static propTypes = {\n    value: PropTypes.number,\n    valueLabel: PropTypes.string,\n    size: PropTypes.number,\n    stroke: PropTypes.number,\n    showText: PropTypes.bool,\n    color: PropTypes.string\n  };\n  static defaultProps = {\n    value: 0,\n    valueLabel: 'Technical',\n    size: 25,\n    stroke: 5,\n    showText: false,\n    color: '#ad974f'\n  };\n\n  render() {\n    const halfsize = (this.props.size * 0.5);\n    const radius = halfsize - (this.props.stroke * 0.5);\n    const circumference = 2 * Math.PI * radius;\n    const strokeval = ((this.props.value * circumference) / 100);\n    const dashval = (strokeval + ' ' + circumference);\n\n    const trackstyle = {strokeWidth: this.props.stroke};\n    const indicatorstyle = {strokeWidth: this.props.stroke, strokeDasharray: dashval}\n    const rotateval = 'rotate(-90 '+halfsize+','+halfsize+')';\n\n    return (\n      <svg width={this.props.size} height={this.props.size} className=\"donutchart\">\n        <circle r={radius} cx={halfsize} cy={halfsize} transform={rotateval} style={trackstyle} className=\"donutchart-track\"/>\n        <circle r={radius} cx={halfsize} cy={halfsize} transform={rotateval} style={indicatorstyle} className=\"donutchart-indicator\"/>\n        {this.props.showText && <text className=\"donutchart-text\" x={halfsize} y={halfsize} style={{textAnchor:'middle'}} >\n          <tspan className=\"donutchart-text-val\">{this.props.value}</tspan>\n          <tspan className=\"donutchart-text-percent\">%</tspan>\n          <tspan className=\"donutchart-text-label\" x={halfsize} y={halfsize+10}>{this.props.valuelabel}</tspan>\n        </text>}\n      </svg>\n    );\n  }\n}\n\nexport default Donut;"]},"metadata":{},"sourceType":"module"}