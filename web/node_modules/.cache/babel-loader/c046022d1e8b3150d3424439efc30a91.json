{"ast":null,"code":"var _jsxFileName = \"/home/app/src/pages/Agenda/Speakers/Speakers.js\";\nimport React, { Component } from 'react';\nimport Individuals from './Individuals';\nimport './Speakers.scss';\nimport config from 'agendaConfig';\nexport default class Speakers extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  getRandomKernel(lengthOfArray, indexToExclude, secondLastKernelIndex) {\n    // This function just grabs a random index that wasn't one of the last two.\n    // Obviously, due to math, you need to send in at least an array of length 3.\n    let rand = null;\n\n    while (rand === null || rand === indexToExclude || rand === secondLastKernelIndex) {\n      rand = Math.round(Math.random() * (lengthOfArray - 1));\n    }\n\n    return rand;\n  }\n\n  getSpeakers() {\n    const talks = config.map(a => a.talks).flat();\n    const speakers = talks.map(a => a.authors).flat().filter(ele => ele.name != ''); // Order Alphabetically\n\n    const speakers_ordered = speakers.sort((a, b) => a.name > b.name ? 1 : b.name > a.name ? -1 : 0); // Because of the way I stack two per row, get a new kernel that's not it's neighbor either up or down.\n\n    let lastKernelIndex = 99;\n    let secondLastKernelIndex = 100;\n    const speakerGroup = speakers_ordered.filter(el => {\n      if (el.hidden === \"true\") {\n        return false;\n      }\n\n      return true;\n    }).map((ele, idx) => {\n      const randKernel = this.getRandomKernel(17, lastKernelIndex, secondLastKernelIndex);\n      secondLastKernelIndex = lastKernelIndex;\n      lastKernelIndex = randKernel; // If image DNE, assign the random kernel we've generated.\n\n      const img = ele.image ? \"speakers/\".concat(ele.image) : \"kernels/\".concat(randKernel, \".png\");\n      return React.createElement(Individuals, {\n        key: idx,\n        speaker_id: ele.speaker_id,\n        talk_id: ele.talk_id,\n        speaker: ele.name,\n        company: ele.company,\n        twitter: ele.twitter,\n        image: img,\n        bio: ele.bio,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      });\n    });\n    return speakerGroup;\n  }\n\n  render() {\n    const speakers = this.getSpeakers();\n    return React.createElement(\"div\", {\n      className: \"venue-section speaker-section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Speakers\"), React.createElement(\"div\", {\n      className: \"speakers\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, speakers));\n  }\n\n}\nSpeakers.displayName = 'Speakers';","map":{"version":3,"sources":["/home/app/src/pages/Agenda/Speakers/Speakers.js"],"names":["React","Component","Individuals","config","Speakers","constructor","props","state","getRandomKernel","lengthOfArray","indexToExclude","secondLastKernelIndex","rand","Math","round","random","getSpeakers","talks","map","a","flat","speakers","authors","filter","ele","name","speakers_ordered","sort","b","lastKernelIndex","speakerGroup","el","hidden","idx","randKernel","img","image","speaker_id","talk_id","company","twitter","bio","render","displayName"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Individuals from './Individuals';\nimport './Speakers.scss';\n\nimport config from 'agendaConfig';\n\nexport default class Speakers extends Component {\n  static displayName = 'Speakers';\n\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  getRandomKernel(lengthOfArray, indexToExclude, secondLastKernelIndex) {\n    // This function just grabs a random index that wasn't one of the last two.\n    // Obviously, due to math, you need to send in at least an array of length 3.\n    let rand = null;\n\n    while (rand === null || rand === indexToExclude || rand === secondLastKernelIndex) {\n      rand = Math.round(Math.random() * (lengthOfArray - 1));\n    }\n    return rand;\n  }\n\n  getSpeakers() {\n    const talks = config.map(a => a.talks).flat();\n    const speakers = talks.map(a => a.authors).flat().filter((ele) => ele.name != '');\n\n    // Order Alphabetically\n    const speakers_ordered = speakers.sort((a,b) => (a.name > b.name) ? 1 : ((b.name > a.name) ? -1 : 0));\n    \n    // Because of the way I stack two per row, get a new kernel that's not it's neighbor either up or down.\n    let lastKernelIndex = 99;\n    let secondLastKernelIndex = 100;\n    const speakerGroup = speakers_ordered.filter((el) => {\n      if (el.hidden === \"true\") {\n        return false;\n      }\n      return true;\n    }).map((ele, idx) => {\n      const randKernel = this.getRandomKernel(17, lastKernelIndex, secondLastKernelIndex);\n      secondLastKernelIndex = lastKernelIndex;\n      lastKernelIndex = randKernel;\n\n      // If image DNE, assign the random kernel we've generated.\n      const img = ele.image ? `speakers/${ele.image}` : `kernels/${randKernel}.png`;\n\n      return (\n        <Individuals key={idx}\n          speaker_id={ele.speaker_id}\n          talk_id={ele.talk_id}\n          speaker={ele.name} \n          company={ele.company}\n          twitter={ele.twitter}\n          image={img}\n          bio={ele.bio}\n        />\n      )\n    });\n\n    return speakerGroup;\n  }\n\n  render() {\n    const speakers = this.getSpeakers();\n    return (\n      <div className='venue-section speaker-section'>\n        <h3 className='title'>Speakers</h3>\n        <div className='speakers'>\n          {speakers}\n        </div>\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}