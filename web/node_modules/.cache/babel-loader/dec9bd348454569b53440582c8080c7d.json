{"ast":null,"code":"var _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport TabSelection from './TabSelection';\nexport var TabSelectionContext = React.createContext({\n  selection: {}\n});\n\nvar TabProvider = function (_Component) {\n  _inherits(TabProvider, _Component);\n\n  function TabProvider(props) {\n    _classCallCheck(this, TabProvider);\n\n    var _this = _possibleConstructorReturn(this, (TabProvider.__proto__ || Object.getPrototypeOf(TabProvider)).call(this, props));\n\n    _this.selection = new TabSelection({\n      defaultTab: props.defaultTab,\n      vertical: props.vertical,\n      collapsible: props.collapsible,\n      onChange: props.onChange\n    });\n    return _this;\n  }\n\n  _createClass(TabProvider, [{\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      if (this.props.defaultTab !== nextProps.defaultTab && !this.selection.isSelected(nextProps.defaultTab)) {\n        this.selection.select(nextProps.defaultTab);\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var children = this.props.children;\n      return React.createElement(TabSelectionContext.Provider, {\n        value: this.selection\n      }, children);\n    }\n  }]);\n\n  return TabProvider;\n}(Component);\n\nTabProvider.defaultProps = {\n  defaultTab: undefined,\n  onChange: undefined,\n  vertical: false,\n  collapsible: false\n};\nTabProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n  defaultTab: PropTypes.string,\n  vertical: PropTypes.bool,\n  collapsible: PropTypes.bool,\n  onChange: PropTypes.func\n};\nexport default TabProvider;","map":null,"metadata":{},"sourceType":"module"}