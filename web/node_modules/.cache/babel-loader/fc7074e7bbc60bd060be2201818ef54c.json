{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n/* eslint-disable jsx-a11y/role-supports-aria-props */\n\nvar TabListComponent = function (_Component) {\n  _inherits(TabListComponent, _Component);\n\n  function TabListComponent() {\n    _classCallCheck(this, TabListComponent);\n\n    return _possibleConstructorReturn(this, (TabListComponent.__proto__ || Object.getPrototypeOf(TabListComponent)).apply(this, arguments));\n  }\n\n  _createClass(TabListComponent, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          children = _props.children,\n          className = _props.className,\n          verticalOrientation = _props.verticalOrientation,\n          props = _objectWithoutProperties(_props, ['children', 'className', 'verticalOrientation']);\n\n      return React.createElement('div', _extends({}, props, {\n        role: 'tablist',\n        'aria-orientation': verticalOrientation ? 'vertical' : '',\n        className: 'rwt__tablist ' + (className || '')\n      }), children);\n    }\n  }]);\n\n  return TabListComponent;\n}(Component);\n\nTabListComponent.defaultProps = {\n  className: '',\n  verticalOrientation: false\n};\nTabListComponent.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string,\n  verticalOrientation: PropTypes.bool\n};\nexport default TabListComponent;","map":null,"metadata":{},"sourceType":"module"}